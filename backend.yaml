- name:  configure the backend server
  hosts: backend
  become: yes
  vars:
    mysql_root_password: ExpenseApp@1
    login_host: db.srikantheswar.online
  tasks:
  - name: disable nodejs 
    ansible.builtin.command: dnf module disable nodejs -y
  - name: enable nodejs
    ansible.builtin.command: dnf module enable nodejs:20 -y
  - name: install nodejs
    ansible.builtin.dnf:
      name: "{{item}}"
      state: latest
    loop:
    - nodejs
    - mysql

  - name: install dependencies  and libraries oy pymysql
    ansible.builtin.pip:
      name:
      - pymysql
      - cryptography
      executable: pip3.9 # this is python version

  - name: create a user
    ansible.builtin.user:
      name: expense

  - name: create a directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download code and unzip the code
    ansible.builtin.unarchive:
      src: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /app
      remote_src: yes

  - name: install npm
    ansible.builtin.command: npm install
    args:
      chdir: /app
  
  - name: copy the backend code
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: import the data
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{mysql_root_password}}"
      login_host: "{{login_host}}"
      name: all
      target: /app/schema/backend.sql
      state: import

  - name: demon relode
    ansible.builtin.systemd_service:
      daemon_reload: 
  
  - name: Start and enable backend server
      ansible.builtin.service:
        name: backend
        state: started
        enabled: yes


  - name: restarted backend
    ansible.builtin.service:
      name: backend
      state: restarted
